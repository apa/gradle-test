buildscript {
	ext {
		springBootVersion = '1.3.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
	}
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'spring-boot' 
apply plugin: 'groovy'

jar {
	baseName = 'demo'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

test {
    testLogging {
        exceptionFormat = 'full'
    }
}


repositories {
	mavenCentral()
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-java-test/java')
        }
        resources.srcDir file('src/integration-java-test/resources')
    }
    integrationGroovyTest {
        groovy {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-groovy-test/groovy')
        }
        resources.srcDir file('src/integration-groovy-test/resources')
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
    integrationGroovyTestCompile.extendsFrom testCompile
    integrationGroovyTestRuntime.extendsFrom testRuntime
}

task integrationTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
}

task integrationGroovyTest(type: Test) {
    testClassesDir = sourceSets.integrationGroovyTest.output.classesDir
    classpath = sourceSets.integrationGroovyTest.runtimeClasspath
    outputs.upToDateWhen { false }
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test

check.dependsOn integrationGroovyTest
integrationGroovyTest.mustRunAfter test

tasks.withType(Test) {
    reports.html.destination = file("${reporting.baseDir}-${name}/${name}")
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter')
	compile('org.springframework.boot:spring-boot-starter-web')	
	compile('org.springframework:spring-web')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	integrationGroovyTestCompile('org.codehaus.groovy:groovy-all:2.4.4')
	integrationGroovyTestCompile('javax.ws.rs:javax.ws.rs-api:2.0')
    integrationGroovyTestCompile('org.apache.cxf:cxf-rt-transports-http:3.1.5')
    integrationGroovyTestCompile('commons-codec:commons-codec:1.9')
    integrationGroovyTestCompile('org.apache.cxf:cxf-rt-rs-client:3.1.5')
    

}


eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.9'
}
